<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace表示命名空间 -->
<mapper namespace="edu.sandau.chat.dao.mapper.UserMapper">

    <select id="login" parameterType="java.lang.String" resultType="User">
        select * from user where ${loginValue} = #{loginName} and password = #{password}
    </select>

    <select id="count" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(1) from user where ${column} = #{value}
    </select>

    <select id="searchUser" parameterType="java.lang.String"
            resultMap="userVOResultMap">
        select id, name, gender, head_portrait
        from user
        where ${column} like concat('%', #{value}, '%' ) and id != #{currentId};
    </select>

    <select id="queryFriendsList" parameterType="java.lang.Integer"
            resultMap="userVOResultMap">
        select user.id, user.name, user.gender, user.head_portrait, friend.group_id, friend.nickname
        from user, friend
        where user.id = friend.friend_id and friend.user_id = #{userId}
    </select>

    <select id="findByName" parameterType="java.lang.String" resultType="User">
        select * from user where name = #{username}
    </select>

    <select id="findFriendById" parameterType="java.lang.Integer"
            resultMap="userVOResultMap">
        select user.id, user.name, user.gender, user.head_portrait, friend.group_id, friend.nickname
        from user, friend
        where user.id = friend.friend_id and friend.user_id = #{userId} and friend.friend_id = #{friendId}
    </select>

    <select id="findRequestUser" parameterType="java.lang.Integer"
            resultMap="userVOResultMap">
        select user.id, user.name, user.gender, user.head_portrait
        from user, friend_request as request
        where user.id = request.send_user_id and request.accept_user_id = #{userId}
    </select>

    <select id="findUserVOById" parameterType="java.lang.Integer"
            resultMap="userVOResultMap">
        select user.id, user.name, user.gender, user.head_portrait
        from user
        where user.id = #{userId}
    </select>

    <resultMap id="userVOResultMap" type="UserVO">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="nickname" property="nickname"/>
        <result column="head_portrait" property="headPortrait"/>
        <result column="group_id" property="groupId"/>
    </resultMap>

</mapper>
